# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'designer.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import json
import re
import threading
from datetime import datetime

import cv2
# import easyocr
import numpy as np
import pytesseract
import requests

import pytz
import serial
import serial.tools.list_ports

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer, QTime, QDate, Qt
from PyQt5.QtGui import QImage
from PyQt5.QtWidgets import QMessageBox

BASE_URL = "http://localhost:8000/api"
API_KEY = "29b068e5f73f77da112c8aa6435993bb"

# reader = easyocr.Reader(['en'])

plakalar = dict({})

pytesseract.pytesseract.tesseract_cmd = r'C:\Users\berat\AppData\Local\Programs\Tesseract-OCR\tesseract'
custom_tesseract_config = r'--oem 3 --psm 6'

capture = cv2.VideoCapture(0, cv2.CAP_DSHOW)
# capture2 = cv2.VideoCapture(1)
dateCounter = 0



class Ui_MainWindow(object):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1483, 757)
        MainWindow.setStyleSheet("background-color: #1e293b")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gb_otoparkBilgileri = QtWidgets.QGroupBox(self.centralwidget)
        self.gb_otoparkBilgileri.setGeometry(QtCore.QRect(110, 60, 621, 291))
        self.gb_otoparkBilgileri.setStyleSheet("background-color: rgb(15, 23, 42);\n"
                                               "font: 600 10pt \"Segoe UI\";\n"
                                               "border:0;\n"
                                               "border-radius:5px;\n"
                                               "color: rgb(240, 245, 245);\n"
                                               "\n"
                                               "")
        self.gb_otoparkBilgileri.setObjectName("gb_otoparkBilgileri")
        self.layoutWidget = QtWidgets.QWidget(self.gb_otoparkBilgileri)
        self.layoutWidget.setGeometry(QtCore.QRect(270, 50, 321, 221))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.lb_kapiDurumu = QtWidgets.QLabel(self.layoutWidget)
        self.lb_kapiDurumu.setStyleSheet("border-radius:0px;\n"
                                         "border-bottom:1px solid gray;\n"
                                         "font-weight:700;\n"
                                         "font-size:20px")
        self.lb_kapiDurumu.setObjectName("lb_kapiDurumu")
        self.verticalLayout_5.addWidget(self.lb_kapiDurumu)
        self.lb_aracSayisi = QtWidgets.QLabel(self.layoutWidget)
        self.lb_aracSayisi.setStyleSheet("border-radius:0px;\n"
                                         "border-bottom:1px solid gray;\n"
                                         "font-weight:700;\n"
                                         "font-size:20px")
        self.lb_aracSayisi.setObjectName("lb_aracSayisi")
        self.verticalLayout_5.addWidget(self.lb_aracSayisi)
        self.lb_yanginAlarmi = QtWidgets.QLabel(self.layoutWidget)
        self.lb_yanginAlarmi.setStyleSheet("border-radius:0px;\n"
                                           "border-bottom:1px solid gray;\n"
                                           "font-weight:700;\n"
                                           "font-size:20px")
        self.lb_yanginAlarmi.setObjectName("lb_yanginAlarmi")
        self.verticalLayout_5.addWidget(self.lb_yanginAlarmi)
        self.lb_saat = QtWidgets.QLabel(self.layoutWidget)
        self.lb_saat.setStyleSheet("border-radius:0px;\n"
                                   "border-bottom:1px solid gray;\n"
                                   "font-weight:700;\n"
                                   "font-size:20px")
        self.lb_saat.setObjectName("lb_saat")
        self.verticalLayout_5.addWidget(self.lb_saat)
        self.lb_tarih = QtWidgets.QLabel(self.layoutWidget)
        self.lb_tarih.setStyleSheet("border-radius:0px;\n"
                                    "padding-left:2px;\n"
                                    "font-weight:700;\n"
                                    "font-size:20px")
        self.lb_tarih.setObjectName("lb_tarih")
        self.verticalLayout_5.addWidget(self.lb_tarih)
        self.layoutWidget1 = QtWidgets.QWidget(self.gb_otoparkBilgileri)
        self.layoutWidget1.setGeometry(QtCore.QRect(30, 50, 201, 221))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_6 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_6.setStyleSheet("border-radius:0px;\n"
                                   "border-bottom:1px solid gray;\n"
                                   "font-weight:600;\n"
                                   "font-size:20px")
        self.label_6.setObjectName("label_6")
        self.verticalLayout_2.addWidget(self.label_6)
        self.label_7 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_7.setStyleSheet("border-radius:0px;\n"
                                   "border-bottom:1px solid gray;\n"
                                   "font-weight:600;\n"
                                   "font-size:20px")
        self.label_7.setObjectName("label_7")
        self.verticalLayout_2.addWidget(self.label_7)
        self.label_8 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_8.setStyleSheet("border-radius:0px;\n"
                                   "border-bottom:1px solid gray;\n"
                                   "font-weight:600;\n"
                                   "font-size:20px")
        self.label_8.setObjectName("label_8")
        self.verticalLayout_2.addWidget(self.label_8)
        self.label_9 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_9.setStyleSheet("border-radius:0px;\n"
                                   "border-bottom:1px solid gray;\n"
                                   "font-weight:600;\n"
                                   "font-size:20px")
        self.label_9.setObjectName("label_9")
        self.verticalLayout_2.addWidget(self.label_9)
        self.label_11 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_11.setStyleSheet("border-radius:0px;\n"
                                    "padding-left:2px;\n"
                                    "font-weight:600;\n"
                                    "font-size:20px")
        self.label_11.setObjectName("label_11")
        self.verticalLayout_2.addWidget(self.label_11)
        self.gb_kamera = QtWidgets.QGroupBox(self.centralwidget)
        self.gb_kamera.setGeometry(QtCore.QRect(760, 60, 611, 291))
        self.gb_kamera.setStyleSheet("background-color: rgb(15, 23, 42);\n"
                                     "font: 600 10pt \"Segoe UI\";\n"
                                     "border:0;\n"
                                     "border-radius:5px;\n"
                                     "color: rgb(240, 245, 245);\n"
                                     "\n"
                                     "\n"
                                     "")
        self.gb_kamera.setObjectName("gb_kamera")
        self.lb_kamera = QtWidgets.QLabel(self.gb_kamera)
        self.lb_kamera.setGeometry(QtCore.QRect(10, 30, 591, 251))
        self.lb_kamera.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.lb_kamera.setText("")
        self.lb_kamera.setPixmap(QtGui.QPixmap("cars/mercedes.jpg"))
        self.lb_kamera.setObjectName("lb_kamera")
        self.gb_sistemKontrol = QtWidgets.QGroupBox(self.centralwidget)
        self.gb_sistemKontrol.setGeometry(QtCore.QRect(110, 380, 621, 291))
        self.gb_sistemKontrol.setStyleSheet("background-color: rgb(15, 23, 42);\n"
                                            "font: 600 10pt \"Segoe UI\";\n"
                                            "border:0;\n"
                                            "border-radius:5px;\n"
                                            "color: rgb(240, 245, 245);\n"
                                            "")
        self.gb_sistemKontrol.setObjectName("gb_sistemKontrol")
        self.layoutWidget2 = QtWidgets.QWidget(self.gb_sistemKontrol)
        self.layoutWidget2.setGeometry(QtCore.QRect(20, 170, 311, 103))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.layoutWidget2)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.btn_kapiyiAc = QtWidgets.QPushButton(self.layoutWidget2)
        self.btn_kapiyiAc.setStyleSheet("border: 2px solid #81E6D9;\n"
                                        "border-radius: 8px;\n"
                                        "padding: 8px 4px;\n"
                                        "color:#81E6D9;\n"
                                        "font: 700 9pt \"Segoe UI\";")
        self.btn_kapiyiAc.setObjectName("btn_kapiyiAc")
        self.verticalLayout_3.addWidget(self.btn_kapiyiAc)
        self.btn_kapiyiKapat = QtWidgets.QPushButton(self.layoutWidget2)
        self.btn_kapiyiKapat.setStyleSheet("border: 2px solid #81E6D9;\n"
                                           "border-radius: 8px;\n"
                                           "padding: 8px 4px;\n"
                                           "color:#81E6D9;\n"
                                           "font: 700 9pt \"Segoe UI\";")
        self.btn_kapiyiKapat.setObjectName("btn_kapiyiKapat")
        self.verticalLayout_3.addWidget(self.btn_kapiyiKapat)
        self.layoutWidget3 = QtWidgets.QWidget(self.gb_sistemKontrol)
        self.layoutWidget3.setGeometry(QtCore.QRect(410, 170, 201, 111))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.layoutWidget3)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.btn_sistemiBaslat = QtWidgets.QPushButton(self.layoutWidget3)
        self.btn_sistemiBaslat.setStyleSheet("border: 2px solid #4ade80;\n"
                                             "border-radius: 8px;\n"
                                             "padding: 8px 4px;\n"
                                             "color:#4ade80;\n"
                                             "font: 700 9pt \"Segoe UI\";")
        self.btn_sistemiBaslat.setObjectName("btn_sistemiBaslat")
        self.verticalLayout_6.addWidget(self.btn_sistemiBaslat)
        self.btn_sistemiKapat = QtWidgets.QPushButton(self.layoutWidget3)
        self.btn_sistemiKapat.setStyleSheet("border: 2px solid #f43f5e;\n"
                                            "border-radius: 8px;\n"
                                            "padding: 8px 4px;\n"
                                            "color:#f43f5e;\n"
                                            "font: 700 9pt \"Segoe UI\";")
        self.btn_sistemiKapat.setObjectName("btn_sistemiKapat")
        self.verticalLayout_6.addWidget(self.btn_sistemiKapat)
        self.layoutWidget4 = QtWidgets.QWidget(self.gb_sistemKontrol)
        self.layoutWidget4.setGeometry(QtCore.QRect(410, 120, 201, 41))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.layoutWidget4)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_14 = QtWidgets.QLabel(self.layoutWidget4)
        self.label_14.setObjectName("label_14")
        self.horizontalLayout_2.addWidget(self.label_14)
        self.cb_ports = QtWidgets.QComboBox(self.layoutWidget4)
        self.cb_ports.setStyleSheet("background-color:#fff;\n"
                                    "color:black")
        self.cb_ports.setObjectName("cb_ports")
        self.cb_ports.addItem("-----")
        self.horizontalLayout_2.addWidget(self.cb_ports)
        self.widget = QtWidgets.QWidget(self.gb_sistemKontrol)
        self.widget.setGeometry(QtCore.QRect(20, 40, 261, 85))
        self.widget.setObjectName("widget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.le_plakaNo = QtWidgets.QLineEdit(self.widget)
        self.le_plakaNo.setStyleSheet("border-radius: 4px;\n"
                                      "border: 1px solid #e0e4e7;\n"
                                      "padding: 3px 5px;\n"
                                      "background-color:#e2e8f0;\n"
                                      "color:#0f172a;\n"
                                      "letter-spacing:2px")
        self.le_plakaNo.setText("")
        self.le_plakaNo.setObjectName("le_plakaNo")
        self.horizontalLayout.addWidget(self.le_plakaNo)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.btn_aracGirisiYap = QtWidgets.QPushButton(self.widget)
        self.btn_aracGirisiYap.setStyleSheet("border: 1px solid #81E6D9;\n"
                                             "border-radius: 5px;\n"
                                             "padding: 6px 0px;\n"
                                             "color:#81E6D9;\n"
                                             "font: 700 10pt \"Segoe UI\";")
        self.btn_aracGirisiYap.setObjectName("btn_aracGirisiYap")
        self.horizontalLayout_3.addWidget(self.btn_aracGirisiYap)
        self.btn_aracCikisiYap = QtWidgets.QPushButton(self.widget)
        self.btn_aracCikisiYap.setStyleSheet("border: 2px solid #81E6D9;\n"
                                             "border-radius: 8px;\n"
                                             "padding: 8px 4px;\n"
                                             "color:#81E6D9;\n"
                                             "font: 700 9pt \"Segoe UI\";")
        self.btn_aracCikisiYap.setObjectName("btn_aracCikisiYap")
        self.horizontalLayout_3.addWidget(self.btn_aracCikisiYap)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.gb_aracBilgileri = QtWidgets.QGroupBox(self.centralwidget)
        self.gb_aracBilgileri.setGeometry(QtCore.QRect(760, 380, 611, 291))
        self.gb_aracBilgileri.setStyleSheet("background-color: rgb(15, 23, 42);\n"
                                            "font: 600 10pt \"Segoe UI\";\n"
                                            "border:0;\n"
                                            "border-radius:5px;\n"
                                            "color: rgb(240, 245, 245);\n"
                                            "")
        self.gb_aracBilgileri.setObjectName("gb_aracBilgileri")
        self.layoutWidget5 = QtWidgets.QWidget(self.gb_aracBilgileri)
        self.layoutWidget5.setGeometry(QtCore.QRect(10, 40, 179, 231))
        self.layoutWidget5.setObjectName("layoutWidget5")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.layoutWidget5)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.label_3 = QtWidgets.QLabel(self.layoutWidget5)
        self.label_3.setStyleSheet("border-radius:0px;\n"
                                   "border-bottom:1px solid gray;\n"
                                   "padding: 0px 25px;\n"
                                   "font-size:22px;\n"
                                   "text-align:center")
        self.label_3.setObjectName("label_3")
        self.verticalLayout_7.addWidget(self.label_3)
        self.label_13 = QtWidgets.QLabel(self.layoutWidget5)
        self.label_13.setStyleSheet("border-radius:0px;\n"
                                    "border-bottom:1px solid gray;\n"
                                    "padding: 0px 25px;\n"
                                    "font-size:22px;\n"
                                    "text-align:center")
        self.label_13.setObjectName("label_13")
        self.verticalLayout_7.addWidget(self.label_13)
        self.label_2 = QtWidgets.QLabel(self.layoutWidget5)
        self.label_2.setStyleSheet("border-radius:0px;\n"
                                   "border-bottom:1px solid gray;\n"
                                   "padding: 0px 25px;\n"
                                   "font-size:22px;\n"
                                   "")
        self.label_2.setObjectName("label_2")
        self.verticalLayout_7.addWidget(self.label_2)
        self.label_4 = QtWidgets.QLabel(self.layoutWidget5)
        self.label_4.setStyleSheet("border-radius:0px;\n"
                                   "border-bottom:1px solid gray;\n"
                                   "padding: 0px 25px;\n"
                                   "font-size:22px;\n"
                                   "")
        self.label_4.setObjectName("label_4")
        self.verticalLayout_7.addWidget(self.label_4)
        self.label_5 = QtWidgets.QLabel(self.layoutWidget5)
        self.label_5.setStyleSheet("border-radius:0px;\n"
                                   "padding: 0px 25px;\n"
                                   "font-size:22px;\n"
                                   "")
        self.label_5.setObjectName("label_5")
        self.verticalLayout_7.addWidget(self.label_5)
        self.layoutWidget6 = QtWidgets.QWidget(self.gb_aracBilgileri)
        self.layoutWidget6.setGeometry(QtCore.QRect(210, 40, 361, 231))
        self.layoutWidget6.setObjectName("layoutWidget6")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.layoutWidget6)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.lb_uyeID = QtWidgets.QLabel(self.layoutWidget6)
        self.lb_uyeID.setStyleSheet("border-radius:0px;\n"
                                    "border-bottom:1px solid gray;\n"
                                    "padding: 0px 20px;\n"
                                    "font-size:22px;\n"
                                    "letter-spacing:1px")
        self.lb_uyeID.setObjectName("lb_uyeID")
        self.verticalLayout_4.addWidget(self.lb_uyeID)
        self.lb_aracPlaka = QtWidgets.QLabel(self.layoutWidget6)
        self.lb_aracPlaka.setStyleSheet("border-radius:0px;\n"
                                        "border-bottom:1px solid gray;\n"
                                        "padding: 0px 20px;\n"
                                        "font-size:22px;\n"
                                        "letter-spacing:1px")
        self.lb_aracPlaka.setObjectName("lb_aracPlaka")
        self.verticalLayout_4.addWidget(self.lb_aracPlaka)
        self.lb_aracSahibi = QtWidgets.QLabel(self.layoutWidget6)
        self.lb_aracSahibi.setStyleSheet("border-radius:0px;\n"
                                         "border-bottom:1px solid gray;\n"
                                         "padding: 0px 20px;\n"
                                         "font-size:22px;\n"
                                         "letter-spacing:1px")
        self.lb_aracSahibi.setObjectName("lb_aracSahibi")
        self.verticalLayout_4.addWidget(self.lb_aracSahibi)
        self.lb_girisSaati = QtWidgets.QLabel(self.layoutWidget6)
        self.lb_girisSaati.setStyleSheet("border-radius:0px;\n"
                                         "border-bottom:1px solid gray;\n"
                                         "padding: 0px 20px;\n"
                                         "font-size:22px;\n"
                                         "letter-spacing:1px")
        self.lb_girisSaati.setObjectName("lb_girisSaati")
        self.verticalLayout_4.addWidget(self.lb_girisSaati)
        self.lb_cikisSaati = QtWidgets.QLabel(self.layoutWidget6)
        self.lb_cikisSaati.setStyleSheet("border-radius:0px;\n"
                                         "padding: 0px 20px;\n"
                                         "font-size:22px;\n"
                                         "letter-spacing:1px")
        self.lb_cikisSaati.setObjectName("lb_cikisSaati")
        self.verticalLayout_4.addWidget(self.lb_cikisSaati)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # Butonların fonksiyon bağlantıları

        self.btn_aracGirisiYap.clicked.connect(self.manuelAracGiris)
        self.btn_aracCikisiYap.clicked.connect(self.aracCikisiYap)
        self.btn_sistemiKapat.clicked.connect(self.CloseTheSystem)
        self.btn_kapiyiAc.clicked.connect(self.OpenTheDoor)
        self.btn_kapiyiKapat.clicked.connect(self.CloseTheDoor)
        self.btn_sistemiBaslat.clicked.connect(self.StartTheSystem)

        self.timer = QTimer()
        self.timer.timeout.connect(self.update_time)
        self.timer.start(1000)

        self.setupArduino()
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def setupArduino(self):
        # baudRates = [1200,2400,4800,9600]
        self.ports = serial.tools.list_ports.comports()

        for port in self.ports:
            self.cb_ports.addItem(str(port.device))

        self.baudRate = 9600
        self.ser = None

    def update_time(self):
        global dateCounter
        self.current_time = QTime.currentTime().toString('hh:mm:ss')
        self.lb_saat.setText(self.current_time)

        dateCounter += 1
        if dateCounter == 60:
            current_date = QDate.currentDate()
            formatted_date = current_date.toString(Qt.DefaultLocaleLongDate)
            self.lb_tarih.setText(formatted_date)
            dateCounter = 0

    def filtre(self, string):
        temiz_string = re.sub(r'[^a-zA-Z0-9]', '', string)
        return temiz_string

    def turkiye_plakasimi(self, plaka):
        regex = r'^[0-8][0-9][A-Z]{1,3}[0-9]{2,4}$'
        if re.match(regex, plaka):
            return True
        else:
            return False

    def ShowMessage(self, status, text, title):
        msgBox = QMessageBox()
        msgBox.setIcon(status)
        msgBox.setText(text)
        msgBox.setWindowTitle(title)
        msgBox.setStandardButtons(QMessageBox.Ok)
        msgBox.setDefaultButton(QMessageBox.Ok)
        returnVal = msgBox.exec()
        return returnVal

    def manuelAracGiris(self):
        plaka = self.le_plakaNo.text()
        if plaka:
            self.aracGirisiYap(plaka)
        else:
            print("Plaka Giriniz.")

    def changeCarCount(self):
        try:
            response = requests.get(BASE_URL + "/parks/active-parks?api_key=" + API_KEY)
            data = response.json()
            carCount = data["carCount"]
            self.lb_aracSayisi.setText(str(carCount) + "/32")
        except Exception as e:
            self.ShowMessage(QMessageBox.Warning, str(e), "Hata!")

    # kapı fonksiyonları
    def OpenTheDoor(self):
        try:
            if self.ser.isOpen() == False:
                return self.ShowMessage(QMessageBox.Warning, "Arduino Bağlantısı Kapalı", "Uyarı!")

            self.ser.write(b'1')
            self.lb_kapiDurumu.setText("Açık")
        except Exception as e:
            print(str(e))

    def CloseTheDoor(self):

        try:
            if self.ser.isOpen() == False:
                return self.ShowMessage(QMessageBox.Warning, "Arduino Bağlantısı Kapalı", "Uyarı!")

            print("Kapı Kapanacak...")
            self.ser.write(b'0')
            self.lb_kapiDurumu.setText("Kapalı")

        except Exception as e:
            print(str(e))

    # sistem fonksiyonları
    def StartTheSystem(self):
        try:

            if len(self.ports) == 0:
                self.definePlate()
                return

            port = self.cb_ports.currentText()
            if "-" in port and len(self.ports) != 0:
                self.ShowMessage(QMessageBox.Warning, "Lütfen Port Seçiniz", "Uyarı!")
                return

            self.ser = serial.Serial(port, self.baudRate)
            self.definePlate()
        except Exception as e:
            self.ShowMessage(QMessageBox.Warning, str(e), "Hata!")

    def CloseTheSystem(self):
        print("Sistem kapatılıyor...", self.ser)

        if self.ser is not None:
            self.ser.close()
        MainWindow.close()
        exit()

    # resim seçme fonksiyonları
    def loadVideo(self, image):
        try:

            setImage = cv2.resize(image, (591, 251))
            self.setPhoto(setImage)

        except:
            self.ShowMessage(QMessageBox.Warning, "Resim Yüklenirken Hata Oluştu.", "Uyarı")

    def setPhoto(self, image):
        try:
            frame = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
            image = QImage(frame, frame.shape[1], frame.shape[0], frame.strides[0], QImage.Format_RGB888)
            self.lb_kamera.setPixmap(QtGui.QPixmap.fromImage(image))
        except:
            self.ShowMessage(QMessageBox.Warning, "Resim Değiştirilirken Hata Oluştu.", "Uyarı")

    def plakayiOku(self, image, x, y, frame):
        try:
            plaka = pytesseract.image_to_string(image, config=custom_tesseract_config)

            plaka = self.filtre(plaka)

            if self.turkiye_plakasimi(plaka):

                response = requests.get(BASE_URL + "/customers/find?plate=" + plaka + "&api_key=" + API_KEY)
                data = response.json()

                if (data["success"]):
                    self.aracGirisiYap(plaka, data["customer"][0])
                else:
                    print(data["error"])

                if plaka not in plakalar:
                    plakalar[plaka] = 1
                    print(f"Okunan Plaka: {plaka}, Okunma Sayisi: {1}")
                else:
                    plakalar[plaka] += 1
                    print(f"Okunan Plaka: {plaka}, Okunma Sayisi: {plakalar[plaka]}")

                # cv2.rectangle(frame, (x, y), (x + width, y + height), (0, 255, 0), 2)
                # cv2.putText(frame, plaka, (x - 10, y - 20), cv2.FONT_HERSHEY_PLAIN, 3, (255, 0, 255), thickness=3)
        except Exception as e:
            print(str(e))

    def definePlate(self):
        try:
            while True:
                ret, frame = capture.read()

                # ret2, frame2 = capture2.read()
                # cv2.imshow("kamera", frame2)

                if not ret:
                    break

                gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

                filter = cv2.bilateralFilter(gray, 7, 50, 50)

                edges = cv2.Canny(filter, 25, 75)

                contours, _ = cv2.findContours(edges, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

                contours = sorted(contours, key=cv2.contourArea, reverse=True)[:100]

                for contour in contours:

                    epsilon = 0.012 * cv2.arcLength(contour, True)
                    approx = cv2.approxPolyDP(contour, epsilon, True)

                    if len(approx) == 4:

                        x, y, w, h = cv2.boundingRect(contour)
                        aspect_ratio = w / h
                        area = cv2.contourArea(contour)

                        if 1500 < area < 50000 and 2.8 <= aspect_ratio <= 5:

                            roi = frame[y:y + h, x:x + w]

                            alt_hsv = np.array([0, 0, 100], dtype=np.uint8)  # Alt sınır HSV değeri
                            ust_hsv = np.array([100, 100, 255], dtype=np.uint8)  # Üst sınır HSV değeri
                            hsv_image = cv2.cvtColor(roi, cv2.COLOR_BGR2HSV)

                            maske = cv2.inRange(hsv_image, alt_hsv, ust_hsv)
                            plaka_bolgesi = cv2.bitwise_and(roi, roi, mask=maske)
                            gri_plaka = cv2.cvtColor(plaka_bolgesi, cv2.COLOR_BGR2GRAY)

                            beyaz_pixel_sayisi = cv2.countNonZero(gri_plaka)
                            threshold = 1000
                            if beyaz_pixel_sayisi > threshold:
                                cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 0, 255), 5)

                                kernel = np.array([[-1, -1, -1],
                                                   [-1, 9, -1],
                                                   [-1, -1, -1]])

                                sharp_image = cv2.filter2D(roi, -1, kernel)

                                plaka_thread = threading.Thread(target=self.plakayiOku,
                                                                args=(sharp_image, x, y, frame,))

                                plaka_thread.start()

                self.setPhoto(frame)

                if cv2.waitKey(50) & 0xFF == ord('q'):
                    break

        except:
            self.ShowMessage(QMessageBox.Warning, "Plakayı okurken hata oluştu.", "Uyarı")

    # arac girisi kontrol fonksiyonu
    def aracGirisiYap(self, plate, customer=None):

        try:

            if customer is None:
                response = requests.get(BASE_URL + "/customers/find?plate=" + plate + "&api_key=" + API_KEY)
                customer = response.json()

                if customer["success"] is False:
                    return self.ShowMessage(QMessageBox.Warning, "Plaka Sisteme Kayıtlı Değil.", "Uyarı")
                customer = customer['customer'][0]

            parkData = {
                "plate": plate,
                "customerId": customer["_id"]
            }

            response = requests.post(BASE_URL + "/parks/new", parkData)
            data = response.json()

            if data["success"]:
                girisSaati = data["park"]["entry_time"]

                # MongoDB saati Python datetime nesnesine dönüştürme
                python_saat = datetime.strptime(girisSaati, "%Y-%m-%dT%H:%M:%S.%f%z")

                # Python saatini farklı bir biçimde gösterme (isteğe bağlı)
                formatli_saat = python_saat.strftime("%d-%m-%Y %H:%M:%S")

                # girisSaatini okunabilir bir saate dönüştürdükten sonra yazdırıcam.
                self.lb_uyeID.setText(customer["_id"])
                self.lb_aracPlaka.setText(customer["plate"])
                self.lb_aracSahibi.setText(customer["fullName"])
                self.lb_girisSaati.setText(formatli_saat)
                self.lb_cikisSaati.setText("--:--")
                # self.ShowMessage(QMessageBox.Information, data["message"], "Başarılı.")

                self.changeCarCount()

                self.OpenTheDoor()

            else:
                # self.ShowMessage(QMessageBox.Warning, data["error"], "Hata!")
                print(data["error"])
        except Exception as e:
            # returnValue = self.ShowMessage(QMessageBox.Critical, "Araç Girişinde Bir Hata Oluştu.", "Uyarı")
            print("araç girişinde hata: " + str(e))

    def aracCikisiYap(self):
        try:
            plaka = self.le_plakaNo.text()
            plaka_dict = {"plate": plaka}

            json_str = json.dumps(plaka_dict)

            headers = {"Content-Type": "application/json"}
            response = requests.post(BASE_URL + "/parks/exit", data=json_str, headers=headers)

            customer = response.json()

            if customer["success"]:  # çıkış işlemi başarılı.
                receipt = customer["receipt"]
                receipt_fee = receipt["receipt_fee"]
                print(customer)

                cikisSaati = customer["receipt"]["createdAt"]
                python_saat = datetime.strptime(cikisSaati, "%Y-%m-%dT%H:%M:%S.%f%z")
                turkiye_saati = pytz.timezone('Europe/Istanbul')
                formatli_saat = python_saat.astimezone(turkiye_saati).strftime("%d-%m-%Y %H:%M:%S")

                park = customer["park"]
                customer = customer["customer"]


                girisSaati = park["entry_time"]
                pythonSaati = datetime.strptime(girisSaati, "%Y-%m-%dT%H:%M:%S.%f%z")
                #trSaati = pytz.timezone('Europe/Istanbul')
                formatliSaat = pythonSaati.strftime("%d-%m-%Y %H:%M:%S")

                self.lb_uyeID.setText(customer["_id"])
                self.lb_aracPlaka.setText(customer["plate"])
                self.lb_aracSahibi.setText(customer["fullName"])
                self.lb_girisSaati.setText(formatliSaat)

                self.lb_cikisSaati.setText(formatli_saat)
                self.CloseTheDoor()
                self.changeCarCount()


            else:
                returnValue = self.ShowMessage(QMessageBox.Warning, customer["error"], "Uyarı")

        except Exception as e:
            #returnValue = self.ShowMessage(QMessageBox.Critical, "Araç Çıkışında Bir Hata Oluştu.", "Uyarı")
            print(str(e))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.gb_otoparkBilgileri.setTitle(_translate("MainWindow", "Otopark Bilgileri"))
        self.lb_kapiDurumu.setText(_translate("MainWindow", "Kapalı"))
        self.lb_aracSayisi.setText(_translate("MainWindow", "9/32"))
        self.lb_yanginAlarmi.setText(_translate("MainWindow", "Yok"))
        self.lb_saat.setText(_translate("MainWindow", "12:43:53"))
        self.lb_tarih.setText(_translate("MainWindow", "03/29/2023"))
        self.label_6.setText(_translate("MainWindow", "Kapı Durumu:"))
        self.label_7.setText(_translate("MainWindow", "Araç Sayısı:"))
        self.label_8.setText(_translate("MainWindow", "Yangın Durumu:"))
        self.label_9.setText(_translate("MainWindow", "Saat:"))
        self.label_11.setText(_translate("MainWindow", "Tarih:"))
        self.gb_kamera.setTitle(_translate("MainWindow", "Giriş Kapısı"))
        self.gb_sistemKontrol.setTitle(_translate("MainWindow", "Sistem Kontrol"))
        self.btn_kapiyiAc.setText(_translate("MainWindow", "Kapıyı Aç "))
        self.btn_kapiyiKapat.setText(_translate("MainWindow", "Kapıyı Kapat"))
        self.btn_sistemiBaslat.setText(_translate("MainWindow", "Sistemi Başlat"))
        self.btn_sistemiKapat.setText(_translate("MainWindow", "Sistemi Kapat"))
        self.label_14.setText(_translate("MainWindow", "PORT:"))
        self.label.setText(_translate("MainWindow", "Plaka No:"))
        self.btn_aracGirisiYap.setText(_translate("MainWindow", "Giriş Yap"))
        self.btn_aracCikisiYap.setText(_translate("MainWindow", "Çıkış Yap"))
        self.gb_aracBilgileri.setTitle(_translate("MainWindow", "Araç Bilgileri"))
        self.label_3.setText(_translate("MainWindow", "Üye ID:"))
        self.label_13.setText(_translate("MainWindow", "Plaka:"))
        self.label_2.setText(_translate("MainWindow", "Araç Sahibi:"))
        self.label_4.setText(_translate("MainWindow", "Giriş Saati:"))
        self.label_5.setText(_translate("MainWindow", "Çıkış Saati:"))
        self.lb_uyeID.setText(_translate("MainWindow", "--------"))
        self.lb_aracPlaka.setText(_translate("MainWindow", "--------"))
        self.lb_aracSahibi.setText(_translate("MainWindow", "--------"))
        self.lb_girisSaati.setText(_translate("MainWindow", "--:--"))
        self.lb_cikisSaati.setText(_translate("MainWindow", "--:--"))

        # başlangıçta güncellenen bilgiler
        self.update_time()
        self.changeCarCount()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
